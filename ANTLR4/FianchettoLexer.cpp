
// Generated from Fianchetto.g4 by ANTLR 4.10.1

#include "FianchettoLexer.h"

using namespace antlr4;

using namespace antlr4;

namespace {

struct FianchettoLexerStaticData final {
  FianchettoLexerStaticData(std::vector<std::string> ruleNames,
                            std::vector<std::string> channelNames,
                            std::vector<std::string> modeNames,
                            std::vector<std::string> literalNames,
                            std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  FianchettoLexerStaticData(const FianchettoLexerStaticData &) = delete;
  FianchettoLexerStaticData(FianchettoLexerStaticData &&) = delete;
  FianchettoLexerStaticData &
  operator=(const FianchettoLexerStaticData &) = delete;
  FianchettoLexerStaticData &operator=(FianchettoLexerStaticData &&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

std::once_flag fianchettolexerLexerOnceFlag;
FianchettoLexerStaticData *fianchettolexerLexerStaticData = nullptr;

void fianchettolexerLexerInitialize() {
  assert(fianchettolexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<FianchettoLexerStaticData>(
      std::vector<std::string>{"T__0",
                               "T__1",
                               "T__2",
                               "T__3",
                               "T__4",
                               "T__5",
                               "T__6",
                               "T__7",
                               "T__8",
                               "T__9",
                               "T__10",
                               "T__11",
                               "T__12",
                               "T__13",
                               "T__14",
                               "T__15",
                               "T__16",
                               "T__17",
                               "T__18",
                               "T__19",
                               "T__20",
                               "T__21",
                               "T__22",
                               "T__23",
                               "T__24",
                               "T__25",
                               "T__26",
                               "T__27",
                               "T__28",
                               "T__29",
                               "T__30",
                               "T__31",
                               "T__32",
                               "T__33",
                               "T__34",
                               "T__35",
                               "T__36",
                               "T__37",
                               "T__38",
                               "T__39",
                               "T__40",
                               "T__41",
                               "T__42",
                               "INTEGER_LITERAL",
                               "FLOAT_LITERAL",
                               "STRING_LITERAL",
                               "IDENTIFIER",
                               "COMMENT",
                               "MULTI_LINE_COMMENT",
                               "WHITESPACE"},
      std::vector<std::string>{"DEFAULT_TOKEN_CHANNEL", "HIDDEN"},
      std::vector<std::string>{"DEFAULT_MODE"},
      std::vector<std::string>{"",
                               "'('",
                               "')'",
                               "'='",
                               "';'",
                               "','",
                               "'int'",
                               "'float'",
                               "'double'",
                               "'void'",
                               "'differentiable'",
                               "'{'",
                               "'}'",
                               "'if'",
                               "'else'",
                               "'while'",
                               "'for'",
                               "'return'",
                               "'\\u003F'",
                               "':'",
                               "'||'",
                               "'&&'",
                               "'=='",
                               "'!='",
                               "'<'",
                               "'>'",
                               "'<='",
                               "'>='",
                               "'+'",
                               "'-'",
                               "'*'",
                               "'/'",
                               "'%'",
                               "'!'",
                               "'++'",
                               "'--'",
                               "'['",
                               "']'",
                               "'''",
                               "'+='",
                               "'-='",
                               "'*='",
                               "'/='",
                               "'%='"},
      std::vector<std::string>{"",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "INTEGER_LITERAL",
                               "FLOAT_LITERAL",
                               "STRING_LITERAL",
                               "IDENTIFIER",
                               "COMMENT",
                               "MULTI_LINE_COMMENT",
                               "WHITESPACE"});
  static const int32_t serializedATNSegment[] = {
      4,   0,   50,  320, 6,   -1,  2,   0,   7,   0,   2,   1,   7,   1,   2,
      2,   7,   2,   2,   3,   7,   3,   2,   4,   7,   4,   2,   5,   7,   5,
      2,   6,   7,   6,   2,   7,   7,   7,   2,   8,   7,   8,   2,   9,   7,
      9,   2,   10,  7,   10,  2,   11,  7,   11,  2,   12,  7,   12,  2,   13,
      7,   13,  2,   14,  7,   14,  2,   15,  7,   15,  2,   16,  7,   16,  2,
      17,  7,   17,  2,   18,  7,   18,  2,   19,  7,   19,  2,   20,  7,   20,
      2,   21,  7,   21,  2,   22,  7,   22,  2,   23,  7,   23,  2,   24,  7,
      24,  2,   25,  7,   25,  2,   26,  7,   26,  2,   27,  7,   27,  2,   28,
      7,   28,  2,   29,  7,   29,  2,   30,  7,   30,  2,   31,  7,   31,  2,
      32,  7,   32,  2,   33,  7,   33,  2,   34,  7,   34,  2,   35,  7,   35,
      2,   36,  7,   36,  2,   37,  7,   37,  2,   38,  7,   38,  2,   39,  7,
      39,  2,   40,  7,   40,  2,   41,  7,   41,  2,   42,  7,   42,  2,   43,
      7,   43,  2,   44,  7,   44,  2,   45,  7,   45,  2,   46,  7,   46,  2,
      47,  7,   47,  2,   48,  7,   48,  2,   49,  7,   49,  1,   0,   1,   0,
      1,   1,   1,   1,   1,   2,   1,   2,   1,   3,   1,   3,   1,   4,   1,
      4,   1,   5,   1,   5,   1,   5,   1,   5,   1,   6,   1,   6,   1,   6,
      1,   6,   1,   6,   1,   6,   1,   7,   1,   7,   1,   7,   1,   7,   1,
      7,   1,   7,   1,   7,   1,   8,   1,   8,   1,   8,   1,   8,   1,   8,
      1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,
      9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,
      1,   10,  1,   10,  1,   11,  1,   11,  1,   12,  1,   12,  1,   12,  1,
      13,  1,   13,  1,   13,  1,   13,  1,   13,  1,   14,  1,   14,  1,   14,
      1,   14,  1,   14,  1,   14,  1,   15,  1,   15,  1,   15,  1,   15,  1,
      16,  1,   16,  1,   16,  1,   16,  1,   16,  1,   16,  1,   16,  1,   17,
      1,   17,  1,   18,  1,   18,  1,   19,  1,   19,  1,   19,  1,   20,  1,
      20,  1,   20,  1,   21,  1,   21,  1,   21,  1,   22,  1,   22,  1,   22,
      1,   23,  1,   23,  1,   24,  1,   24,  1,   25,  1,   25,  1,   25,  1,
      26,  1,   26,  1,   26,  1,   27,  1,   27,  1,   28,  1,   28,  1,   29,
      1,   29,  1,   30,  1,   30,  1,   31,  1,   31,  1,   32,  1,   32,  1,
      33,  1,   33,  1,   33,  1,   34,  1,   34,  1,   34,  1,   35,  1,   35,
      1,   36,  1,   36,  1,   37,  1,   37,  1,   38,  1,   38,  1,   38,  1,
      39,  1,   39,  1,   39,  1,   40,  1,   40,  1,   40,  1,   41,  1,   41,
      1,   41,  1,   42,  1,   42,  1,   42,  1,   43,  4,   43,  244, 8,   43,
      11,  43,  12,  43,  245, 1,   44,  5,   44,  249, 8,   44,  10,  44,  12,
      44,  252, 9,   44,  1,   44,  1,   44,  4,   44,  256, 8,   44,  11,  44,
      12,  44,  257, 1,   44,  1,   44,  3,   44,  262, 8,   44,  1,   44,  4,
      44,  265, 8,   44,  11,  44,  12,  44,  266, 3,   44,  269, 8,   44,  1,
      45,  1,   45,  1,   45,  1,   45,  5,   45,  275, 8,   45,  10,  45,  12,
      45,  278, 9,   45,  1,   45,  1,   45,  1,   46,  1,   46,  5,   46,  284,
      8,   46,  10,  46,  12,  46,  287, 9,   46,  1,   47,  1,   47,  1,   47,
      1,   47,  5,   47,  293, 8,   47,  10,  47,  12,  47,  296, 9,   47,  1,
      47,  1,   47,  1,   48,  1,   48,  1,   48,  1,   48,  5,   48,  304, 8,
      48,  10,  48,  12,  48,  307, 9,   48,  1,   48,  1,   48,  1,   48,  1,
      48,  1,   48,  1,   49,  4,   49,  315, 8,   49,  11,  49,  12,  49,  316,
      1,   49,  1,   49,  1,   305, 0,   50,  1,   1,   3,   2,   5,   3,   7,
      4,   9,   5,   11,  6,   13,  7,   15,  8,   17,  9,   19,  10,  21,  11,
      23,  12,  25,  13,  27,  14,  29,  15,  31,  16,  33,  17,  35,  18,  37,
      19,  39,  20,  41,  21,  43,  22,  45,  23,  47,  24,  49,  25,  51,  26,
      53,  27,  55,  28,  57,  29,  59,  30,  61,  31,  63,  32,  65,  33,  67,
      34,  69,  35,  71,  36,  73,  37,  75,  38,  77,  39,  79,  40,  81,  41,
      83,  42,  85,  43,  87,  44,  89,  45,  91,  46,  93,  47,  95,  48,  97,
      49,  99,  50,  1,   0,   8,   1,   0,   48,  57,  2,   0,   69,  69,  101,
      101, 2,   0,   43,  43,  45,  45,  2,   0,   34,  34,  92,  92,  3,   0,
      65,  90,  95,  95,  97,  122, 4,   0,   48,  57,  65,  90,  95,  95,  97,
      122, 2,   0,   10,  10,  13,  13,  3,   0,   9,   10,  13,  13,  32,  32,
      331, 0,   1,   1,   0,   0,   0,   0,   3,   1,   0,   0,   0,   0,   5,
      1,   0,   0,   0,   0,   7,   1,   0,   0,   0,   0,   9,   1,   0,   0,
      0,   0,   11,  1,   0,   0,   0,   0,   13,  1,   0,   0,   0,   0,   15,
      1,   0,   0,   0,   0,   17,  1,   0,   0,   0,   0,   19,  1,   0,   0,
      0,   0,   21,  1,   0,   0,   0,   0,   23,  1,   0,   0,   0,   0,   25,
      1,   0,   0,   0,   0,   27,  1,   0,   0,   0,   0,   29,  1,   0,   0,
      0,   0,   31,  1,   0,   0,   0,   0,   33,  1,   0,   0,   0,   0,   35,
      1,   0,   0,   0,   0,   37,  1,   0,   0,   0,   0,   39,  1,   0,   0,
      0,   0,   41,  1,   0,   0,   0,   0,   43,  1,   0,   0,   0,   0,   45,
      1,   0,   0,   0,   0,   47,  1,   0,   0,   0,   0,   49,  1,   0,   0,
      0,   0,   51,  1,   0,   0,   0,   0,   53,  1,   0,   0,   0,   0,   55,
      1,   0,   0,   0,   0,   57,  1,   0,   0,   0,   0,   59,  1,   0,   0,
      0,   0,   61,  1,   0,   0,   0,   0,   63,  1,   0,   0,   0,   0,   65,
      1,   0,   0,   0,   0,   67,  1,   0,   0,   0,   0,   69,  1,   0,   0,
      0,   0,   71,  1,   0,   0,   0,   0,   73,  1,   0,   0,   0,   0,   75,
      1,   0,   0,   0,   0,   77,  1,   0,   0,   0,   0,   79,  1,   0,   0,
      0,   0,   81,  1,   0,   0,   0,   0,   83,  1,   0,   0,   0,   0,   85,
      1,   0,   0,   0,   0,   87,  1,   0,   0,   0,   0,   89,  1,   0,   0,
      0,   0,   91,  1,   0,   0,   0,   0,   93,  1,   0,   0,   0,   0,   95,
      1,   0,   0,   0,   0,   97,  1,   0,   0,   0,   0,   99,  1,   0,   0,
      0,   1,   101, 1,   0,   0,   0,   3,   103, 1,   0,   0,   0,   5,   105,
      1,   0,   0,   0,   7,   107, 1,   0,   0,   0,   9,   109, 1,   0,   0,
      0,   11,  111, 1,   0,   0,   0,   13,  115, 1,   0,   0,   0,   15,  121,
      1,   0,   0,   0,   17,  128, 1,   0,   0,   0,   19,  133, 1,   0,   0,
      0,   21,  148, 1,   0,   0,   0,   23,  150, 1,   0,   0,   0,   25,  152,
      1,   0,   0,   0,   27,  155, 1,   0,   0,   0,   29,  160, 1,   0,   0,
      0,   31,  166, 1,   0,   0,   0,   33,  170, 1,   0,   0,   0,   35,  177,
      1,   0,   0,   0,   37,  179, 1,   0,   0,   0,   39,  181, 1,   0,   0,
      0,   41,  184, 1,   0,   0,   0,   43,  187, 1,   0,   0,   0,   45,  190,
      1,   0,   0,   0,   47,  193, 1,   0,   0,   0,   49,  195, 1,   0,   0,
      0,   51,  197, 1,   0,   0,   0,   53,  200, 1,   0,   0,   0,   55,  203,
      1,   0,   0,   0,   57,  205, 1,   0,   0,   0,   59,  207, 1,   0,   0,
      0,   61,  209, 1,   0,   0,   0,   63,  211, 1,   0,   0,   0,   65,  213,
      1,   0,   0,   0,   67,  215, 1,   0,   0,   0,   69,  218, 1,   0,   0,
      0,   71,  221, 1,   0,   0,   0,   73,  223, 1,   0,   0,   0,   75,  225,
      1,   0,   0,   0,   77,  227, 1,   0,   0,   0,   79,  230, 1,   0,   0,
      0,   81,  233, 1,   0,   0,   0,   83,  236, 1,   0,   0,   0,   85,  239,
      1,   0,   0,   0,   87,  243, 1,   0,   0,   0,   89,  250, 1,   0,   0,
      0,   91,  270, 1,   0,   0,   0,   93,  281, 1,   0,   0,   0,   95,  288,
      1,   0,   0,   0,   97,  299, 1,   0,   0,   0,   99,  314, 1,   0,   0,
      0,   101, 102, 5,   40,  0,   0,   102, 2,   1,   0,   0,   0,   103, 104,
      5,   41,  0,   0,   104, 4,   1,   0,   0,   0,   105, 106, 5,   61,  0,
      0,   106, 6,   1,   0,   0,   0,   107, 108, 5,   59,  0,   0,   108, 8,
      1,   0,   0,   0,   109, 110, 5,   44,  0,   0,   110, 10,  1,   0,   0,
      0,   111, 112, 5,   105, 0,   0,   112, 113, 5,   110, 0,   0,   113, 114,
      5,   116, 0,   0,   114, 12,  1,   0,   0,   0,   115, 116, 5,   102, 0,
      0,   116, 117, 5,   108, 0,   0,   117, 118, 5,   111, 0,   0,   118, 119,
      5,   97,  0,   0,   119, 120, 5,   116, 0,   0,   120, 14,  1,   0,   0,
      0,   121, 122, 5,   100, 0,   0,   122, 123, 5,   111, 0,   0,   123, 124,
      5,   117, 0,   0,   124, 125, 5,   98,  0,   0,   125, 126, 5,   108, 0,
      0,   126, 127, 5,   101, 0,   0,   127, 16,  1,   0,   0,   0,   128, 129,
      5,   118, 0,   0,   129, 130, 5,   111, 0,   0,   130, 131, 5,   105, 0,
      0,   131, 132, 5,   100, 0,   0,   132, 18,  1,   0,   0,   0,   133, 134,
      5,   100, 0,   0,   134, 135, 5,   105, 0,   0,   135, 136, 5,   102, 0,
      0,   136, 137, 5,   102, 0,   0,   137, 138, 5,   101, 0,   0,   138, 139,
      5,   114, 0,   0,   139, 140, 5,   101, 0,   0,   140, 141, 5,   110, 0,
      0,   141, 142, 5,   116, 0,   0,   142, 143, 5,   105, 0,   0,   143, 144,
      5,   97,  0,   0,   144, 145, 5,   98,  0,   0,   145, 146, 5,   108, 0,
      0,   146, 147, 5,   101, 0,   0,   147, 20,  1,   0,   0,   0,   148, 149,
      5,   123, 0,   0,   149, 22,  1,   0,   0,   0,   150, 151, 5,   125, 0,
      0,   151, 24,  1,   0,   0,   0,   152, 153, 5,   105, 0,   0,   153, 154,
      5,   102, 0,   0,   154, 26,  1,   0,   0,   0,   155, 156, 5,   101, 0,
      0,   156, 157, 5,   108, 0,   0,   157, 158, 5,   115, 0,   0,   158, 159,
      5,   101, 0,   0,   159, 28,  1,   0,   0,   0,   160, 161, 5,   119, 0,
      0,   161, 162, 5,   104, 0,   0,   162, 163, 5,   105, 0,   0,   163, 164,
      5,   108, 0,   0,   164, 165, 5,   101, 0,   0,   165, 30,  1,   0,   0,
      0,   166, 167, 5,   102, 0,   0,   167, 168, 5,   111, 0,   0,   168, 169,
      5,   114, 0,   0,   169, 32,  1,   0,   0,   0,   170, 171, 5,   114, 0,
      0,   171, 172, 5,   101, 0,   0,   172, 173, 5,   116, 0,   0,   173, 174,
      5,   117, 0,   0,   174, 175, 5,   114, 0,   0,   175, 176, 5,   110, 0,
      0,   176, 34,  1,   0,   0,   0,   177, 178, 5,   63,  0,   0,   178, 36,
      1,   0,   0,   0,   179, 180, 5,   58,  0,   0,   180, 38,  1,   0,   0,
      0,   181, 182, 5,   124, 0,   0,   182, 183, 5,   124, 0,   0,   183, 40,
      1,   0,   0,   0,   184, 185, 5,   38,  0,   0,   185, 186, 5,   38,  0,
      0,   186, 42,  1,   0,   0,   0,   187, 188, 5,   61,  0,   0,   188, 189,
      5,   61,  0,   0,   189, 44,  1,   0,   0,   0,   190, 191, 5,   33,  0,
      0,   191, 192, 5,   61,  0,   0,   192, 46,  1,   0,   0,   0,   193, 194,
      5,   60,  0,   0,   194, 48,  1,   0,   0,   0,   195, 196, 5,   62,  0,
      0,   196, 50,  1,   0,   0,   0,   197, 198, 5,   60,  0,   0,   198, 199,
      5,   61,  0,   0,   199, 52,  1,   0,   0,   0,   200, 201, 5,   62,  0,
      0,   201, 202, 5,   61,  0,   0,   202, 54,  1,   0,   0,   0,   203, 204,
      5,   43,  0,   0,   204, 56,  1,   0,   0,   0,   205, 206, 5,   45,  0,
      0,   206, 58,  1,   0,   0,   0,   207, 208, 5,   42,  0,   0,   208, 60,
      1,   0,   0,   0,   209, 210, 5,   47,  0,   0,   210, 62,  1,   0,   0,
      0,   211, 212, 5,   37,  0,   0,   212, 64,  1,   0,   0,   0,   213, 214,
      5,   33,  0,   0,   214, 66,  1,   0,   0,   0,   215, 216, 5,   43,  0,
      0,   216, 217, 5,   43,  0,   0,   217, 68,  1,   0,   0,   0,   218, 219,
      5,   45,  0,   0,   219, 220, 5,   45,  0,   0,   220, 70,  1,   0,   0,
      0,   221, 222, 5,   91,  0,   0,   222, 72,  1,   0,   0,   0,   223, 224,
      5,   93,  0,   0,   224, 74,  1,   0,   0,   0,   225, 226, 5,   39,  0,
      0,   226, 76,  1,   0,   0,   0,   227, 228, 5,   43,  0,   0,   228, 229,
      5,   61,  0,   0,   229, 78,  1,   0,   0,   0,   230, 231, 5,   45,  0,
      0,   231, 232, 5,   61,  0,   0,   232, 80,  1,   0,   0,   0,   233, 234,
      5,   42,  0,   0,   234, 235, 5,   61,  0,   0,   235, 82,  1,   0,   0,
      0,   236, 237, 5,   47,  0,   0,   237, 238, 5,   61,  0,   0,   238, 84,
      1,   0,   0,   0,   239, 240, 5,   37,  0,   0,   240, 241, 5,   61,  0,
      0,   241, 86,  1,   0,   0,   0,   242, 244, 7,   0,   0,   0,   243, 242,
      1,   0,   0,   0,   244, 245, 1,   0,   0,   0,   245, 243, 1,   0,   0,
      0,   245, 246, 1,   0,   0,   0,   246, 88,  1,   0,   0,   0,   247, 249,
      7,   0,   0,   0,   248, 247, 1,   0,   0,   0,   249, 252, 1,   0,   0,
      0,   250, 248, 1,   0,   0,   0,   250, 251, 1,   0,   0,   0,   251, 253,
      1,   0,   0,   0,   252, 250, 1,   0,   0,   0,   253, 255, 5,   46,  0,
      0,   254, 256, 7,   0,   0,   0,   255, 254, 1,   0,   0,   0,   256, 257,
      1,   0,   0,   0,   257, 255, 1,   0,   0,   0,   257, 258, 1,   0,   0,
      0,   258, 268, 1,   0,   0,   0,   259, 261, 7,   1,   0,   0,   260, 262,
      7,   2,   0,   0,   261, 260, 1,   0,   0,   0,   261, 262, 1,   0,   0,
      0,   262, 264, 1,   0,   0,   0,   263, 265, 7,   0,   0,   0,   264, 263,
      1,   0,   0,   0,   265, 266, 1,   0,   0,   0,   266, 264, 1,   0,   0,
      0,   266, 267, 1,   0,   0,   0,   267, 269, 1,   0,   0,   0,   268, 259,
      1,   0,   0,   0,   268, 269, 1,   0,   0,   0,   269, 90,  1,   0,   0,
      0,   270, 276, 5,   34,  0,   0,   271, 275, 8,   3,   0,   0,   272, 273,
      5,   92,  0,   0,   273, 275, 9,   0,   0,   0,   274, 271, 1,   0,   0,
      0,   274, 272, 1,   0,   0,   0,   275, 278, 1,   0,   0,   0,   276, 274,
      1,   0,   0,   0,   276, 277, 1,   0,   0,   0,   277, 279, 1,   0,   0,
      0,   278, 276, 1,   0,   0,   0,   279, 280, 5,   34,  0,   0,   280, 92,
      1,   0,   0,   0,   281, 285, 7,   4,   0,   0,   282, 284, 7,   5,   0,
      0,   283, 282, 1,   0,   0,   0,   284, 287, 1,   0,   0,   0,   285, 283,
      1,   0,   0,   0,   285, 286, 1,   0,   0,   0,   286, 94,  1,   0,   0,
      0,   287, 285, 1,   0,   0,   0,   288, 289, 5,   47,  0,   0,   289, 290,
      5,   47,  0,   0,   290, 294, 1,   0,   0,   0,   291, 293, 8,   6,   0,
      0,   292, 291, 1,   0,   0,   0,   293, 296, 1,   0,   0,   0,   294, 292,
      1,   0,   0,   0,   294, 295, 1,   0,   0,   0,   295, 297, 1,   0,   0,
      0,   296, 294, 1,   0,   0,   0,   297, 298, 6,   47,  0,   0,   298, 96,
      1,   0,   0,   0,   299, 300, 5,   47,  0,   0,   300, 301, 5,   42,  0,
      0,   301, 305, 1,   0,   0,   0,   302, 304, 9,   0,   0,   0,   303, 302,
      1,   0,   0,   0,   304, 307, 1,   0,   0,   0,   305, 306, 1,   0,   0,
      0,   305, 303, 1,   0,   0,   0,   306, 308, 1,   0,   0,   0,   307, 305,
      1,   0,   0,   0,   308, 309, 5,   42,  0,   0,   309, 310, 5,   47,  0,
      0,   310, 311, 1,   0,   0,   0,   311, 312, 6,   48,  0,   0,   312, 98,
      1,   0,   0,   0,   313, 315, 7,   7,   0,   0,   314, 313, 1,   0,   0,
      0,   315, 316, 1,   0,   0,   0,   316, 314, 1,   0,   0,   0,   316, 317,
      1,   0,   0,   0,   317, 318, 1,   0,   0,   0,   318, 319, 6,   49,  0,
      0,   319, 100, 1,   0,   0,   0,   13,  0,   245, 250, 257, 261, 266, 268,
      274, 276, 285, 294, 305, 316, 1,   6,   0,   0};
  staticData->serializedATN = antlr4::atn::SerializedATNView(
      serializedATNSegment,
      sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) {
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i),
                                           i);
  }
  fianchettolexerLexerStaticData = staticData.release();
}

} // namespace

FianchettoLexer::FianchettoLexer(CharStream *input) : Lexer(input) {
  FianchettoLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(
      this, *fianchettolexerLexerStaticData->atn,
      fianchettolexerLexerStaticData->decisionToDFA,
      fianchettolexerLexerStaticData->sharedContextCache);
}

FianchettoLexer::~FianchettoLexer() { delete _interpreter; }

std::string FianchettoLexer::getGrammarFileName() const {
  return "Fianchetto.g4";
}

const std::vector<std::string> &FianchettoLexer::getRuleNames() const {
  return fianchettolexerLexerStaticData->ruleNames;
}

const std::vector<std::string> &FianchettoLexer::getChannelNames() const {
  return fianchettolexerLexerStaticData->channelNames;
}

const std::vector<std::string> &FianchettoLexer::getModeNames() const {
  return fianchettolexerLexerStaticData->modeNames;
}

const dfa::Vocabulary &FianchettoLexer::getVocabulary() const {
  return fianchettolexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView FianchettoLexer::getSerializedATN() const {
  return fianchettolexerLexerStaticData->serializedATN;
}

const atn::ATN &FianchettoLexer::getATN() const {
  return *fianchettolexerLexerStaticData->atn;
}

void FianchettoLexer::initialize() {
  std::call_once(fianchettolexerLexerOnceFlag, fianchettolexerLexerInitialize);
}
